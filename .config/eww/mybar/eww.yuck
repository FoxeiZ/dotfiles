;; VARS
(defvar eww "eww -c $HOME/.config/eww/mybar")
(defvar music_reveal false)
(defvar cover "images/music.png")
(defvar media_bar_class "bar_normal")
(defvar media_bar_class_popup "bar_normal_popup")
(defvar battery_image "images/battery_normal.png")
(defvar day "0")
(defvar month "0")
(defvar year "0")
(defvar wp0 "●")
(defvar wp1 "○")
(defvar wp2 "○")
(defvar wp3 "○")
(defvar layout_button "")
(defvar media_status "")
(defvar artist "No artist")
(defvar artist_parsed "No artist                      ") 
(defvar title "No title") 
(defvar title_parsed "No title                       ") 
(defvar length 100)
(defvar position 0)

(deflisten launch1 "scripts/workspaces")
(deflisten launch2 "scripts/layout")
(deflisten launch3 "scripts/media_info")
(defpoll temperature :interval "5s" "scripts/temperature_info")
(defpoll battery_percent :interval "5s" "scripts/battery_info --percentage")
(defpoll battery_time :interval "5s" "scripts/battery_info --time")
(defpoll hour :interval "1s" "date +\"%H\"")
(defpoll minutes :interval "1s" "date +\"%M\"")
(defpoll seconds :interval "1s" "date +\"%S\"")
(defpoll date :interval "1s" "date +\"%a, %d/%m/%Y\"")

;; WINDOWS
;; Left bar
(defwindow bar_left
  :geometry 
    (geometry 
      :x "10px"
      :y "5px"
      :width "765px"
      :height "50px")
  :stacking "bg"
  :reserve 
    (struts 
      :distance "40px" 
      :side "top")
  :windowtype "dock"
  :wm-ignore "false"
(widgets_left))

;; Central bar 
(defwindow bar_center
  :geometry 
    (geometry 
      :x "1255px"
      :y "5px"
      :width "180px"
      :height "50px")
  :stacking "bg"
  :reserve 
    (struts 
      :distance "40px" 
      :side "top")
  :windowtype "dock"
  :wm-ignore "false"
  (widgets_center))

;; Right bar
(defwindow bar_right
  :geometry 
    (geometry 
      :x "1445px"
      :y "5px"
      :width "463px"
      :height "50px")
  :stacking "bg"
  :reserve 
    (struts 
      :distance "40px" 
      :side "top")
  :windowtype "dock"
  :wm-ignore "false"
(widgets_right))

;; Calendar window
(defwindow calendar
  :geometry 
    (geometry 
      :x "1455px" 
      :y "50px"
      :width "435px"
      :height "100px")
  :stacking "fg"
  :windowtype "dock"
  :wm-ignore "false"
  (box
    :class "cal"
    :orientation "h"
    :valign "fill"
    :halign "fill"
    (calendar
      :day day
      :month month
      :year year
      :show-details "true"
      :show-heading "true"
      :show-day-names "true")))

;; Music window
(defwindow music
  :geometry
    (geometry
      :x "178px"
      :y "50px"
      :width "515px"
      :height "200px")
    :stacking "fg"
    :windowtype "dock"
    :wm-ignore "false"
    (box
      :orientation "v"
      :valign "fill"
      :halign "fill"
      :space-evenly "false"
      :class "music_box_popup"
      (box
        :orientation "h"
        :valign "fill"
        :halign "fill"
        :space-evenly "false"
        (box
          :valign "center"
          :halign "start"
	      :style "min-height: 150px;"
          (image
            :halign "start"
            :class "media_art_popup"
            :tooltip "${title} by ${artist}"
            :path cover
            :image-height 130
            :image-width 130))
        (box
          :valign "center"
          :halign "fill"
          :orientation "v"
          :class "media_data_popup"
          :spacing 20
          (label
            :class "media_title_popup"
            :markup title_parsed
            :halign "center")
          (label
            :class "media_artist_popup"
            :markup artist_parsed
            :halign "center")
          (box
            :orientation "h"
            :halign "fill"
            :valign "fill"
            :class "media_buttons_box_popup"
            (eventbox
              :cursor "pointer"
              (button
                :onclick "scripts/media_control --prev"
                :class "nextprev_popup"
                :tooltip "Previous"
                ""))
            (eventbox
              :cursor "pointer"
              (button
                :onclick "scripts/media_control --move -5"
                :class "move_popup"
                :tooltip "-5 seconds"
                ""))
            (eventbox
              :cursor "pointer"
              (button
                :onclick "scripts/media_control --toggle"
                :class "playpause_popup"
                :tooltip "Play/Pause"
                media_status))
            (eventbox
              :cursor "pointer"
              (button
                :onclick "scripts/media_control --move +5"
                :class "move_popup"
                :tooltip "+5 seconds"
                ""))
            (eventbox
              :cursor "pointer"
              (button
                :onclick "scripts/media_control --next"
                :class "nextprev_popup"
                :tooltip "Next"
                ""))      
                )))
      (eventbox
        :cursor "pointer"
        :onhover "${eww} update media_bar_class_popup=\"bar_highlighted_popup\""
        :onhoverlost "${eww} update media_bar_class_popup=\"bar_normal_popup\""
        (box
          :orienttion "h"
          :valign "fill"
          :halign "fill"
          :class media_bar_class_popup
          (scale
            :min 0
            :max length
            :value position
            :orientation "h"
            :onchange "scripts/media_control --seek {}"
          )))
      ))

;; WIDGETS
;; Left widgets
(defwidget widgets_left []
  (eventbox
    (box 
      :spacing 0
      :space-evenly "false"
      :class "bars"
      :orientation "h"
      :valign "fill"
      :hexpand "false"
      (workspaces)
      (layout)
      (music))))


  (defwidget workspaces []
    (box 
      :orientation "h"
      :halign "start"
      :class "workspaces"
      (box
        :orientation "h"
        :spacing 5
        :space-evenly "false"
        :class "${launch1}, ${launch2}, ${launch3}"
        (eventbox
          :cursor "pointer"
          (button 
            :tooltip "Switch to workspace 1"
            :onclick "bspc desktop -f 1"
            (label
              :markup wp0 
              :class "workspace_buttons")))
        (eventbox
          :cursor "pointer"
          (button 
            :tooltip "Switch to workspace 2"
            :onclick "bspc desktop -f 2"
            (label
              :markup wp1 
              :class "workspace_buttons")))
        (eventbox
          :cursor "pointer"
          (button 
            :tooltip "Switch to workspace 3"
            :onclick "bspc desktop -f 3"
            (label
              :markup wp2 
              :class "workspace_buttons")))
        (eventbox
          :cursor "pointer"
          (button 
            :tooltip "Switch to workspace 4"
            :onclick "bspc desktop -f 4"
            (label
              :markup wp3 
              :class "workspace_buttons")))
      )))

  (defwidget layout []
    (box 
      :orientation "h"
      :halign "start"
      (box 
        :orientation "h"
        :space-evenly "false"
        (eventbox 
          :cursor "pointer"
          (button
            :tooltip "Change current destop layout"
            :onclick "bspc desktop focused --layout next"
            (label
              :class "layout"
              :text layout_button)))
      )))

  (defwidget music []     
    (eventbox 
      :onhover "${eww} update music_reveal=true"
      :onhoverlost "${eww} update music_reveal=false"
      (box 
        :class "music_box"
        :orientation "h" 
        :spacing 0
        :space-evenly "false"
        :halign "start"
        (eventbox
          :cursor "pointer"
          (box 
            :space_evenly "false"
            :halign "start"
            :tooltip "${title} by ${artist}"
            (button
              :onclick "scripts/popup_music"
              (image
                :class "media_art"
                :path cover
                :image-height 40
                :image-width 40))))

         (box
            :space-evenly "true"
            :orientation "v"
            :hexpand "true"
             (label
                :class "media_title"
                :yalign 0.57
                :halign "center"
                :valign "center"
                :markup title_parsed
                :limit-width 60
                :wrap "false"
                :show_truncated "false"))
      
        (box
          :class "media_data"
          :orientation "v"
          :space-evenly "false"
          :vexpand "false"
          :hexpand "false"
          :valign "center"
          :halign "center"
        
          (box 
            :space-evenly "false"
            :class media_bar_class
            :halign "center"
            :vexpand "false"
            :hexpand "false"
            (box
              (scale
                :active "true"
                :min 0
                :max length
                :value position
                :orientation "h"
                :onchange "scripts/media_control --seek {}"
                ))))
           (box
            :orientation "h"
            (box 
              :orientation "h"
              :halign "center"
              :space-evenly "false"
              :class "media_buttons"
              :space-evenly "false"
              (eventbox 
                :cursor "pointer"
                (button 
                  :class "prev_button"
                  :onclick "scripts/media_control --prev" 
                  :tooltip "Previous"
                  ""))
              (eventbox 
                :cursor "pointer"
                (button 
                  :class "toggle_button"
                  :onclick "scripts/media_control --toggle" 
                  :tooltip "Play/Pause"
                  "${media_status}"))
              (eventbox
                :cursor "pointer"
                (button 
                  :class "next_button"
                  :onclick "scripts/media_control --next" 
                  :tooltip "Next"
                  "")))))))
       
        
;; Central widgets
(defwidget widgets_center []
  (eventbox
    (box 
      :spacing 0
      :space-evenly "true"
      :class "bars"
      :orientation "h"
      :valign "fill"
      :halign "fill"
      :hexpand "false"
      (box
        :space-evenly "true"
        :orientation "h"
        :valign "center"
        :halign "fill" 
        (temperature_status)
        (battery_status)
        ))))

(defwidget temperature_status []
  (eventbox
    (box 
      :orientation "h"
      :space-evenly "false"
      :class "temperature_box"
      :vexpand "false"
      :hexpand "false"
        (image
          :class "center_icons"
          :path "images/temperature.png"
          :image-width 30
          :image-height 30)
        (box 
          :orientation "v"
          :space-evenly "false"
          :vexpand "false"
          :hexpand "false"
          :valign "center"
          :class "center_boxes"
          (box
             :orientation "v"
              :class "center_info"
              :valign "start"
              (label
                :class "center_labels"
                :text "${temperature}°C"
                :halign "center")
          )
          ))))

(defwidget battery_status []
  (eventbox
    :tooltip "${battery_time} remaining"
    (box 
      :orientation "h"
      :space-evenly "false"
      :class "battery_box"
      :vexpand "false"
      :hexpand "false"
        (image :class "center_icons" :path battery_image :image-width 30 :image-height 30)
        (box 
          :orientation "v"
          :space-evenly "false"
          :vexpand "false"
          :hexpand "false"
          :valign "center"
          :class "center_boxes"
          (box
              :orientation "v"
              :class "center_info"
              :valign "start"
              (label :class "center_labels" :text "${battery_percent}%" :halign "center")
          )
        )
     )
  )
)

;; Right widgets
(defwidget widgets_right []
  (eventbox
    (box 
      :spacing 0
      :space-evenly "false"
      :class "bars"
      :orientation "h"
      :valign "fill"
      :hexpand "false"
      (power_button)
      (time)
    )
  )
)

(defwidget power_button []
  (eventbox
    :cursor "pointer"
    :tooltip "Power options"
    (button
      :valign "center"
      :onclick "~/.config/rofi/powermenu.sh 2> /dev/null"
      (label :class "power_button" :text "")
    )
  )
)

(defwidget time []
  (eventbox
    :tooltip "${date}"
    :cursor "pointer"
    (button 
      :onclick "scripts/popup_calendar"
      (box
        :class "time_box"
        :space-evenly "false"
        :orientation "h"
        :valign "center"
        :halign "fill"
        (label :valign "center" :class "time" :markup "<span font-weight=\"light\">${hour}:${minutes}:${seconds}</span>")
      )
    )
  )
)
